@page "/AddContact"
@using BlazorApp2.Shared;
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Add Contact</h3>

<EditForm Model="@_contact" OnValidSubmit="Post">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Name Contact: </label>
        <InputText @bind-Value="_contact.name" />
        <ValidationMessage For="@(() => _contact.name)" />
    </div>
    <div class="form-group">
        <label>Phone Contact: </label>
        <InputText @bind-Value="_contact.phone" />
        <ValidationMessage For="@(() => _contact.phone)" />
    </div>
    <div class="form-group">
        <label>Cellphone Contact: </label>
        <InputText @bind-Value="_contact.telephone" />
        <ValidationMessage For="@(() => _contact.telephone)" />
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-success" value="Add Contact" />
    </div>
</EditForm>
<div class="alert alert-secondary mt-4">
    <span class="text-nowrap">
        <p>@message</p>
    </span>
</div>
@code {
    string message = "";
    private Contact _contact = new();
    private string infoContact;
    private async Task Post()
    {
        try
        {
            if (ValidateNullAdd() == false) return;

            infoContact = await Http.GetStringAsync($"https://localhost:7086/api/contact/ExistinContact/{_contact.name}");

            if (ValidateExistContactAdd() == true) return;

            await Http.PostAsJsonAsync<Contact>("/api/contact", _contact);
            message = "Contact added successfully";
        }
        catch (Exception error)
        {
            message = "You have entered the data incorrectly, please check and try again";
        }
    }
    private bool ValidateNullAdd()
    {
        try
        {
            if (_contact.name == null || _contact.phone == null || _contact.telephone == null)
            {
                message = "Some data is missing, please check and enter the data again";
                return false;
            }
        }
        catch (Exception error)
        {
            Console.WriteLine("{0}", error.Message);
        }
        return true;
    }
    private bool ValidateExistContactAdd()
    {
        try
        {
            if (bool.Parse(infoContact) == true)
            {
                message = "The contact already exists";
                return true;
            }
        }
        catch (Exception error)
        {
            Console.WriteLine("{0}", error.Message);
        }
        return false;
    }
}